<?php
// auto-generated by sfPropelCrud
// date: 2008/12/23 13:28:03
?>
<?php

/**
 * transCollection actions.
 *
 * @package    PolishRomance
 * @subpackage transCollection
 * @author     Dincho Todorov <dincho
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class transCollectionActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('transCollection', 'list');
  }

  public function executeList()
  {
    $this->trans_collections = TransCollectionPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->trans_collection = TransCollectionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->trans_collection);
  }

  public function executeCreate()
  {
    $this->trans_collection = new TransCollection();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->trans_collection = TransCollectionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->trans_collection);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $trans_collection = new TransCollection();
    }
    else
    {
      $trans_collection = TransCollectionPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($trans_collection);
    }

    $trans_collection->setId($this->getRequestParameter('id'));
    $trans_collection->setName($this->getRequestParameter('name'));

    $trans_collection->save();

    return $this->redirect('transCollection/show?id='.$trans_collection->getId());
  }

  public function executeDelete()
  {
    $trans_collection = TransCollectionPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($trans_collection);

    $trans_collection->delete();

    return $this->redirect('transCollection/list');
  }
}
