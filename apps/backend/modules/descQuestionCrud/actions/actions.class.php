<?php
// auto-generated by sfPropelCrud
// date: 2008/08/01 09:46:50
?>
<?php

/**
 * descQuestionCrud actions.
 *
 * @package    pr
 * @subpackage descQuestionCrud
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class descQuestionCrudActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('descQuestionCrud', 'list');
  }

  public function executeList()
  {
    $this->desc_questions = DescQuestionPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->desc_question = DescQuestionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->desc_question);
  }

  public function executeCreate()
  {
    $this->desc_question = new DescQuestion();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->desc_question = DescQuestionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->desc_question);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $desc_question = new DescQuestion();
    }
    else
    {
      $desc_question = DescQuestionPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($desc_question);
    }

    $desc_question->setId($this->getRequestParameter('id'));
    $desc_question->setTitle($this->getRequestParameter('title'));
    $desc_question->setSearchTitle($this->getRequestParameter('search_title'));
    $desc_question->setType($this->getRequestParameter('type'));

    $desc_question->save();

    return $this->redirect('descQuestionCrud/show?id='.$desc_question->getId());
  }

  public function executeDelete()
  {
    $desc_question = DescQuestionPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($desc_question);

    $desc_question->delete();

    return $this->redirect('descQuestionCrud/list');
  }
}
