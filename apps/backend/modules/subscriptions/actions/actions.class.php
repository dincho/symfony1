<?php
// auto-generated by sfPropelCrud
// date: 2008/05/07 13:20:11
?>
<?php

/**
 * subscriptions actions.
 *
 * @package    pr
 * @subpackage subscriptions
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class subscriptionsActions extends sfActions
{
  public function executeList()
  {
    $this->subscriptions = SubscriptionPeer::doSelect(new Criteria());
  }

  public function executeEdit()
  {
    //$subscription = SubscriptionPeer::retrieveByPk($this->getRequestParameter('id'));
    //$this->forward404Unless($subscription);
    $subscriptions = SubscriptionPeer::doSelect(new Criteria());
    
    if( $this->getRequest()->getMethod() == sfRequest::POST )
    {
        //print_r($_POST);exit();
        $req_subs = $this->getRequestParameter('subs');
        foreach ($subscriptions as $subscription)
        {
            if( array_key_exists($subscription->getId(), $req_subs) )
            {
                $subscription->setCanPostPhoto($req_subs[$subscription->getId()]['can_post_photo']);
                $subscription->setPostPhotos($req_subs[$subscription->getId()]['post_photos']);
                $subscription->setCanWink($req_subs[$subscription->getId()]['can_wink']);
                $subscription->setWinks($req_subs[$subscription->getId()]['winks']);
                $subscription->setCanReadMessages($req_subs[$subscription->getId()]['can_read_messages']);
                $subscription->setReadMessages($req_subs[$subscription->getId()]['read_messages']);
                $subscription->setCanReplyMessages($req_subs[$subscription->getId()]['can_reply_messages']);
                $subscription->setReplyMessages($req_subs[$subscription->getId()]['reply_messages']);
                $subscription->setCanSendMessages($req_subs[$subscription->getId()]['can_send_messages']);
                $subscription->setSendMessages($req_subs[$subscription->getId()]['send_messages']);
                $subscription->setCanSeeViewed($req_subs[$subscription->getId()]['can_see_viewed']);
                $subscription->setSeeViewed($req_subs[$subscription->getId()]['see_viewed']);
                $subscription->setCanContactAssistant($req_subs[$subscription->getId()]['can_contact_assistant']);
                $subscription->setContactAssistant($req_subs[$subscription->getId()]['contact_assistant']);
                
                $subscription->setPeriod1From($this->getRequestParameter('period1_from'));
                $subscription->setPeriod1To($this->getRequestParameter('period1_to'));
                $subscription->setPeriod1Price($req_subs[$subscription->getId()]['period1_price']);
                $subscription->setPeriod2From($this->getRequestParameter('period2_from'));
                $subscription->setPeriod2To($this->getRequestParameter('period2_to'));
                $subscription->setPeriod2Price($req_subs[$subscription->getId()]['period2_price']);
                $subscription->setPeriod3From($this->getRequestParameter('period3_from'));
                $subscription->setPeriod3To($this->getRequestParameter('period3_to'));
                $subscription->setPeriod3Price($req_subs[$subscription->getId()]['period3_price']);
                $subscription->setPreApprove(@$req_subs[$subscription->getId()]['pre_approve']);
                $subscription->save();                
            }
        }
        
	    return $this->redirect('subscriptions/list');
    }
    
    $this->subscriptions = $subscriptions;
    $this->sub1 = $subscriptions[0];
  }
}
