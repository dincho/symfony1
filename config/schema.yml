propel:
  session_storage:
    sess_id:              { type: varchar, size: 255, required: true }
    sess_data:            { type: longvarchar, required: true }
    sess_time:            { type: timestamp, required: true }
    user_id:              { type: integer, required: false, default: null }
    _uniques:
      sess_id:            [sess_id]
      user_sess:          [user_id, sess_id]
    _indexes:
      sess_time:          [sess_time]
      
  user: #admin users
    id:
    username:             { type: varchar, size: 20, required: true }
    password:             { type: char, size: 40, required: true } #sha1
    first_name:           { type: varchar, size: 80, required: true }  
    last_name:            { type: varchar, size: 80, required: true }
    email:                { type: varchar, size: 255, required: true }
    phone:                { type: varchar, size: 20, required: true }
    #permisions
    dashboard_mod:            { type: boolean, default: false, required: true }
    dashboard_mod_type:       { type: char, size: 1, default: "V", required: true }
    members_mod:              { type: boolean, default: false, required: true }
    members_mod_type:         { type: char, size: 1, default: "V", required: true }
    content_mod:              { type: boolean, default: false, required: true }
    content_mod_type:         { type: char, size: 1, default: "V", required: true }
    subscriptions_mod:        { type: boolean, default: false, required: true }
    subscriptions_mod_type:   { type: char, size: 1, default: "V", required: true }
    messages_mod:             { type: boolean, default: false, required: true }
    messages_mod_type:        { type: char, size: 1, default: "V", required: true }
    feedback_mod:             { type: boolean, default: false, required: true }
    feedback_mod_type:        { type: char, size: 1, default: "V", required: true }
    flags_mod:                { type: boolean, default: false, required: true }
    flags_mod_type:           { type: char, size: 1, default: "V", required: true }
    imbra_mod:                { type: boolean, default: false, required: true }
    imbra_mod_type:           { type: char, size: 1, default: "V", required: true }
    reports_mod:              { type: boolean, default: false, required: true }
    reports_mod_type:         { type: char, size: 1, default: "V", required: true }
    users_mod:                { type: boolean, default: false, required: true }
    users_mod_type:           { type: char, size: 1, default: "V", required: true }
    #end permisions
    must_change_pwd:      { type: boolean, default: false, required: true }
    is_superuser:         { type: boolean, default: false, required: true }
    is_enabled:           { type: boolean, default: false, required: true }
    last_login:           { type: timestamp }
    created_at:
  ipblock:
    id:
    item:                   { type: varchar, size: 255 }
    item_type:              { type: integer, size: 1, default: 0 }
    netmask:                { type: integer, size: 2, default: 24 }
    created_at:
    _uniques:
      uniq_item_type:       [item, item_type]
    _indexes:
      item_type:            [item_type]
  member:
    id:
    member_status_id:         { type: integer, required: false, foreignTable: member_status, foreignReference: id, onDelete: restrict }
    username:                 { type: varchar, size: 20, required: true }
    password:                 { type: char, size: 40, required: true } #sha1
    new_password:             { type: char, size: 40, required: false } #sha1 temp password used for container before password confirmation
    must_change_pwd:          { type: boolean, default: false, required: true } #force member to change password on next login 
    first_name:               { type: varchar, size: 80, required: true }  
    last_name:                { type: varchar, size: 80, required: true }
    email:                    { type: varchar, size: 255, required: true }
    tmp_email:                { type: varchar, size: 255, required: true } #temp field used for changging emails
    has_email_confirmation:   { type: boolean, required: true, default: 0 }
    sex:                      { type: char, size: 1, required: true }
    looking_for:              { type: char, size: 1, required: true }
    reviewed_by_id:           { type: integer, required: false, foreignTable: user, foreignReference: id, onDelete: setnull }
    reviewed_at:              { type: timestamp, required: false }
    is_starred:               { type: boolean, default: false, required: true }
    country:                  { type: varchar, size: 4, required: true }
    adm1_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: restrict }
    adm2_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: restrict }
    city_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: restrict }
    zip:                      { type: varchar, size: 20, required: true }
    nationality:              { type: varchar, size: 255, required: true }
    language:                 { type: varchar, size: 3, required: true } #this filed is currently used for match engine and notifications
    birthday:                 { type: bu_date }
    dont_display_zodiac:      { type: boolean, required: true, default: false }
    us_citizen:               { type: boolean, required: false }
    email_notifications:      { type: tinyint, required: false }
    dont_use_photos:          { type: boolean, required: true, default: 0 }
    contact_only_full_members:  { type: boolean, required: true, default: 0 }
    youtube_vid:              { type: varchar, size: 20, required: false } #YouTube video ID
    essay_headline:           { type: varchar, size: 255 }
    essay_introduction:       { type: longvarchar }
    main_photo_id:            { type: integer, required: false, foreignTable: member_photo, foreignReference: id, onDelete: setnull }
    subscription_id:          { type: integer, required: true, foreignTable: subscription, foreignReference: id, onDelete: restrict }
    member_counter_id:        { type: integer, required: true, foreignTable: member_counter, foreignReference: id, onDelete: restrict }
    public_search:            { type: boolean, required: true, default: false }
    private_dating:           { type: boolean, required: true, default: false }
    registration_ip:          { type: integer, required: false }
    last_ip:                  { type: integer, required: false }
    last_status_change:       { type: timestamp } #used for geting stats like 'New Deletions pending review'
    last_flagged:             { type: timestamp } #timestamp of the last flag
    last_login:               { type: timestamp }
    last_activity_notification:        { type: timestamp }
    created_at:
    dashboard_msg:            { type: integer, size: 1, required: false, default: 0 }
    imbra_payment:            { type: varchar, size: 100, required: false }
    original_first_name:      { type: varchar, size: 80, required: false }  
    original_last_name:       { type: varchar, size: 80, required: true }
    last_subscription_change: { type: timestamp }
    last_photo_upload_at:     { type: timestamp }
    purpose:                  { type: varchar, size: 255 }
    millionaire:              { type: boolean, default: false }
    last_payment_state:       { type: varchar, size: 50, required: false }
    _uniques:
      username:               [username]
      email:                  [email]
  member_status:
    id:
    title:                    { type: varchar, size: 255 }
  #split table with all counters of each member
  #this is "lite" variant since is it too slow to use COUNT over flags  and messages table,
  #each time when we need this values
  member_counter:
    id:
    current_flags:            { type: integer, required: true, default: 0 }
    total_flags:              { type: integer, required: true, default: 0 }
    sent_flags:               { type: integer, required: true, default: 0 }
    sent_winks:               { type: integer, required: true, default: 0 }
    sent_winks_day:           { type: integer, required: true, default: 0 }
    received_winks:           { type: integer, required: true, default: 0 }
    received_winks_day:       { type: integer, required: true, default: 0 }
    read_messages:            { type: integer, required: true, default: 0 }
    read_messages_day:        { type: integer, required: true, default: 0 }
    sent_messages:            { type: integer, required: true, default: 0 }
    sent_messages_day:        { type: integer, required: true, default: 0 }
    received_messages:        { type: integer, required: true, default: 0 }
    reply_messages:           { type: integer, required: true, default: 0 }
    reply_messages_day:       { type: integer, required: true, default: 0 }
    unsuspensions:            { type: integer, required: true, default: 0 }
    assistant_contacts:       { type: integer, required: true, default: 0 }
    assistant_contacts_day:   { type: integer, required: true, default: 0 }
    profile_views:            { type: integer, required: true, default: 0 }
    made_profile_views:       { type: integer, required: true, default: 0 }
    hotlist:                  { type: integer, required: true, default: 0 }
    on_others_hotlist:        { type: integer, required: true, default: 0 }
    active:                   { type: integer, size: 1, required: true, default: 0 }
  member_note:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    user_id:                  { type: integer, required: false, foreignTable: user, foreignReference: id, onDelete: setnull }
    text:                     { type: longvarchar, required: true }
    created_at:
  member_login_history:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    last_login:               { type: timestamp }
    created_at:
  desc_question:
    id:
    title:                    { type: varchar, size: 255 }
    search_title:             { type: varchar, size: 255 }
    desc_title:               { type: varchar, size: 255 }
    factor_title:             { type: varchar, size: 255 }
    type:                     { type: varchar, size: 50 }
    is_required:              { type: boolean, required: true, default: true }
    select_greather:          { type: boolean, required: true, default: false }
    other:                    { type: varchar, size: 255, required: false }
    include_custom:           { type: varchar, size: 255, required: false }
  desc_answer:
    id:
    desc_question_id:         { type: integer, required: true, foreignTable: desc_question, foreignReference: id, onDelete: cascade }
    title:                    { type: longvarchar } #longvarchar because of personality
    search_title:             { type: varchar, size: 255 }
    desc_title:               { type: varchar, size: 255 }
  member_desc_answer:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    desc_question_id:         { type: integer, required: true, foreignTable: desc_question, foreignReference: id, onDelete: cascade }
    desc_answer_id:           { type: integer, required: false, default: null }
    other:                    { type: varchar, size: 255 }
    custom:                   { type: longvarchar } #some custom answers depending from type, e.g. serialized array
  search_crit_desc:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    desc_question_id:         { type: integer, required: true, foreignTable: desc_question, foreignReference: id, onDelete: cascade }
    desc_answers:             { type: longvarchar, required: false }
    match_weight:             { type: tinyint, required: true }
  member_photo:
    id:
    member_id:                { type: integer, required: false, foreignTable: member, foreignReference: id, onDelete: cascade }
    file:                     { type: varchar, size: 255 }
    cropped:                  { type: varchar, size: 255 }
    is_main:                  { type: boolean, required: true, default: false }
    auth:                     { type: char, size: 1, required: false } #S - submitted for approve, A - approved, D - Denied
  stock_photo:
    id:
    file:                     { type: varchar, size: 255 }
    cropped:                  { type: varchar, size: 255 }
    gender:                   { type: char, size: 1, required: true, default: "M" }
    homepages:                { type: varchar, size: 255 } #will be used like array with comma separator (EN, PL, BG) ..
    homepages_set:            { type: tinyint } 
    homepages_pos:            { type: tinyint }
    assistants:               { type: varchar, size: 255 } #will be used like array with comma separator (EN, PL, BG)
    join_now:                 { type: varchar, size: 255 } #will be used like array with comma separator (EN, PL, BG)     
    updated_at:
  imbra_question:
    id:
    only_explain:             { type: boolean, required: true, default: false }  
  imbra_question_i18n:
    title:                    { type: longvarchar, required: false }
    explain_title:            { type: longvarchar, required: false }
    positive_answer:          { type: longvarchar, required: false }
    negative_answer:          { type: longvarchar, required: false }
  imbra_status:
    id:
    title:                    { type: varchar, size: 80 }
  imbra_reply_template:
    id:
    user_id:
    title:                    { type: varchar, size: 255 }
    subject:                  { type: varchar, size: 255 }
    body:                     { type: longvarchar }
    footer:                   { type: longvarchar }
    mail_from:                { type: varchar, size: 255 }
    reply_to:                 { type: varchar, size: 255 }
    bcc:                      { type: varchar, size: 255 }
    created_at:
  member_imbra:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    imbra_status_id:          { type: integer, required: true, foreignTable: imbra_status, foreignReference: id, onDelete: restrict }
    name:                     { type: varchar, size: 100 }
    dob:                      { type: varchar, size: 100 }
    address:                  { type: varchar, size: 255 }
    city:                     { type: varchar, size: 100 }
    adm1_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: restrict }
    zip:                      { type: varchar, size: 20 }
    phone:                    { type: varchar, size: 30 }
    created_at:
  member_imbra_i18n:
    text:                     { type: longvarchar }
  member_imbra_answer:
    id:
    member_imbra_id:          { type: integer, required: true, foreignTable: member_imbra, foreignReference: id, onDelete: cascade }
    imbra_question_id:        { type: integer, required: true, foreignTable: imbra_question, foreignReference: id, onDelete: cascade }
    answer:                   { type: boolean, default: false, required: true }
    explanation:              { type: longvarchar }
  profile_view:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    profile_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade } #viewed member/profile id
    is_new:                   { type: boolean, default: true, required: true }
    created_at:
    updated_at:
  block:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    profile_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    created_at:    
  subscription:
    id:
    title:                    { type: varchar, size: 255 }
    can_create_profile:       { type: boolean, default: false, required: true }
    create_profiles:          { type: integer, default: 0, required: true }
    can_post_photo:           { type: boolean, default: false, required: true }
    post_photos:              { type: integer, default: 0, required: true }
    can_wink:                 { type: boolean, default: false, required: true }
    winks:                    { type: integer, default: 0, required: true }
    winks_day:                { type: integer, default: 0, required: true }
    can_read_messages:        { type: boolean, default: false, required: true }
    read_messages:            { type: integer, default: 0, required: true }
    read_messages_day:        { type: integer, default: 0, required: true }
    can_reply_messages:       { type: boolean, default: false, required: true }
    reply_messages:           { type: integer, default: 0, required: true }
    reply_messages_day:       { type: integer, default: 0, required: true }
    can_send_messages:        { type: boolean, default: false, required: true }
    send_messages:            { type: integer, default: 0, required: true }
    send_messages_day:        { type: integer, default: 0, required: true }
    can_see_viewed:           { type: boolean, default: false, required: true }
    see_viewed:               { type: integer, default: 0, required: true }
    can_contact_assistant:    { type: boolean, default: false, required: true }
    contact_assistant:        { type: integer, default: 0, required: true }
    contact_assistant_day:    { type: integer, default: 0, required: true }
    private_dating:           { type: boolean, default: false, required: true }
    pre_approve:              { type: boolean, default: false, required: true }
    amount:                   { type: decimal, size: 7, scale: 2, required: true }
    period:                   { type: integer, required: true }
    period_type:              { type: char, size: 1, required: true, required: true }
    imbra_amount:             { type: decimal, size: 7, scale: 2, required: true }
  subscription_history:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    subscription_id:          { type: integer, required: true, foreignTable: subscription, foreignReference: id, onDelete: cascade }
    member_status_id:
    from_date:                { type: timestamp }
    created_at:
  member_status_history:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    member_status_id:         { type: integer, required: true, foreignTable: member_status, foreignReference: id, onDelete: cascade }
    created_at:
    from_status_id:           { type: integer } #need for reports
    from_date:                { type: timestamp } #need for reports

  thread:
    id:
    subject:                  { type: varchar, size: 255 }
    snippet:                  { type: longvarchar }
    snippet_member_id:        { type: integer, required: false, foreignTable: member, foreignReference: id, onDelete: setnull }
    created_at:
    updated_at:

  message:
    id:
    sender_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    recipient_id:             { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    thread_id:                { type: integer, required: false, foreignTable: thread, foreignReference: id, onDelete: setnull }
    subject:                  { type: longvarchar }
    body:                     { type: longvarchar }
    type:                     { type: integer, required: true, default: 1 } #1 - normal, 2 - draft, 3 - system
    unread:                   { type: boolean, default: true, required: true }
    is_reviewed:              { type: boolean, default: false, required: true }
    predefined_id:            { type: integer, required: false }
    sender_deleted_at:        { type: timestamp }
    recipient_deleted_at:     { type: timestamp }
    created_at:
    updated_at:               #currently used only for drafts
    _indexes:
      msg_type:               [type]

  predefined_message:
    id:
    subject:                  { type: longvarchar }
    body:                     { type: longvarchar }
    sex:                      { type: char, size: 1, required: true }
    looking_for:              { type: char, size: 1, required: true }

  hotlist:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    profile_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    is_new:                   { type: boolean, default: true, required: true }
    created_at:
  wink:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    profile_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    sent_box:                 { type: boolean, default: false, required: true }
    is_new:                   { type: boolean, default: true, required: true }
    created_at:
    deleted_at:               { type: timestamp }
  feedback:
    id:
    mailbox:                  { type: tinyint, required: true, default: 1 } #default to INBOX
    member_id:                { type: integer, required: false, foreignTable: member, foreignReference: id, onDelete: setnull }
    mail_from:                varchar(255)
    name_from:                varchar(255)
    mail_to:                  varchar(255)
    name_to:                  varchar(255)
    bcc:                      { type: varchar, size: 255 }
    subject:                  varchar(255)
    body:                     longvarchar
    is_read:                  { type: boolean, default: false, required: true }
    created_at:
  feedback_template:
    id:
    name:                     varchar(255)
    mail_from:                varchar(255)
    reply_to:                 varchar(255)
    bcc:                      { type: varchar, size: 255 }
    subject:                  varchar(255)
    body:                     longvarchar
    footer:                   longvarchar
  flag_category:
    id:
    title:                    { type: varchar, size: 255 }
  flag:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    flagger_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    flag_category_id:         { type: integer, required: true, foreignTable: flag_category, foreignReference: id, onDelete: restrict }
    comment:                  { type: varchar, size: 255 }
    is_history:               { type: boolean, required: true, default: false }
    created_at:
  suspended_by_flag:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    confirmed_at:             { type: timestamp }
    confirmed_by:             { type: integer, required: false, foreignTable: user, foreignReference: id, onDelete: setnull }
    created_at:
  catalogue:
    cat_id:         { type: integer, size: 11,  required: true, autoincrement: true, primaryKey: true }
    name:           { type: varchar, size: 100, required: true,  default: '' }
    source_lang:    { type: varchar, size: 100, required: true,  default: '' }
    target_lang:    { type: varchar, size: 100, required: true,  default: '' }
    date_created:   { type: integer, size: 11, required: true,  default: 0 }
    date_modified:  { type: integer, size: 11, required: true,  default: 0 }
    author:         { type: varchar, size: 255, required: true,  default: '' }
    _uniques:
      name:         [name]
  trans_unit:
    id:
    cat_id:                 { type: integer, size: 11, required: true, default: 1, foreignTable: catalogue, foreignReference: cat_id }
    msg_collection_id:
    source:                 { type: varchar, required: true, size: 1000  }
    target:                 { type: longvarchar, required: true  }
    comments:               { type: longvarchar }
    author:                 { type: varchar, size: 255, required: true, default: ''}
    translated:             { type: boolean, required: true, default: false }
    tags:                   { type: longvarchar }
    link:                   { type: longvarchar }
    date_added:             { type: integer, size: 11, required: true,  default: 0 }
    date_modified:          { type: integer, size: 11, required: true,  default: 0 }
    #_uniques:        
      #cat_id_source:        [ cat_id, source ]
  trans_collection:
    id:
    name:                   { type: varchar, size: 255 }
  msg_collection:
    id:
    trans_collection_id:
    name:                   { type: varchar, size: 255 }
  static_page:
    id:
    slug:                   { type: varchar, size: 255, required: true }
    has_mini_menu:          { type: boolean, required: true, default: false }
    has_content:            { type: boolean, required: true, default: true }
  static_page_i18n:
    link_name:      { type: varchar, size: 100, required: false }
    title:          { type: varchar, size: 255, required: true }
    keywords:       { type: varchar, size: 255, required: false }
    description:    { type: longvarchar, required: false }
    content:        { type: longvarchar, required: true }
    updated_at:     
  bestv_tmpl:
    id:
    updated_at:
  bestv_tmpl_i18n:    
    header:         { type: longvarchar, required: false }
    body_winner:    { type: longvarchar, required: false }
    footer:         { type: longvarchar, required: false }    
  member_story:
    id:
    culture:            { type: varchar, size: 7 }
    slug:               { type: varchar, size: 255, required: true }
    sort_order:         { type: integer, size: 11, required: true, default: 0 }
    link_name:          { type: varchar, size: 100, required: true }
    title:              { type: varchar, size: 255, required: true }
    summary:            { type: varchar, size: 255, required: true }
    keywords:           { type: varchar, size: 255, required: true }
    description:        { type: longvarchar, required: true }
    content:            { type: longvarchar, required: true }
    stock_photo_id:     { type: integer, required: false, foreignTable: stock_photo, foreignReference: id, onDelete: setnull }
    updated_at:
    _uniques:
      slug:             [slug]
    _indexes:           
      culture:          [culture]
  homepage_member_story:
    id:
    member_stories:     { type: varchar, size: 255 }
    homepage_culture:   { type: varchar, size: 7 }
    _indexes:
      homepage_culture: [homepage_culture]
  notification:
    id:
    name:           { type: varchar, size: 255 }
    trigger_name:   { type: varchar, size: 255 }
    is_active:      { type: boolean, required: true, default: false }
    to_admins:      { type: boolean, required: true, default: false }
    days:           { type: integer }
    whn:            { type: char, size: 1 } # when ... before after X days
  notification_i18n:
    send_from:      { type: varchar, size: 255 }
    send_to:        { type: varchar, size: 255 }
    reply_to:       { type: varchar, size: 255 }
    bcc:            { type: varchar, size: 255 }    
    subject:        { type: varchar, size: 255 }
    body:           { type: longvarchar }
    footer:         { type: longvarchar }
    mail_config:    { type: varchar, size: 255 }
      
  notification_event:
    id:
    notification_id:
    event:           { type: tinyint }
    _uniques:
      event_notify:  [notification_id, event]
    _indexes:
      event:         [event]
  web_email:
    id:
    subject:        { type: varchar, size: 255 }
    body:           { type: longvarchar }
    hash:           { type: char, size: 40, required: true } #sha1
    created_at:
  member_match:
    id:
    member1_id:     { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    member2_id:     { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    pct:            { type: tinyint, required: true, default: 0 }
    _uniques:
      member_match: [member1_id, member2_id]
      
  geo:
    id:
    name:                     { type: varchar, size: 100 }
    dsg:                      { type: varchar, size: 4, required: true }
    country:                  { type: varchar, size: 4, required: true }
    adm1_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: setnull }
    adm2_id:                  { type: integer, required: false, foreignTable: geo, foreignReference: id, onDelete: setnull }
    latitude:                 { type: float }
    longitude:                { type: float }
    population:               { type: integer, size: 10, required: true, default: 0 }
    timezone:                 { type: varchar, size: 255, default: "UTC" }
    geo_details_id:           { type: integer, required: false, foreignTable: geo_details, foreignReference: id, onDelete: setnull }
    #info:                     { type: longvarchar }
    _indexes:
      complex:                [country, dsg, adm1_id, adm2_id, name]
  geo_photo:
    id:
    geo_id:                   { type: integer, required: true, foreignTable: geo, foreignReference: id, onDelete: cascade }
    file:                     { type: varchar, size: 255 }
  geo_details:
    id:
    geo_id:                   { type: integer, required: true, foreignTable: geo, foreignReference: id, onDelete: cascade }
  geo_details_i18n:
    member_info:              { type: longvarchar }
    seo_info:                 { type: longvarchar }
    
  link:
    id:
    hash:              { type: char, size: 40, required: true } #sha1
    login_as:          { type: integer }
    uri:               { type: varchar, size: 255, required: true }
    expires_at:        { type: timestamp }
    login_expires_at:  { type: timestamp }
    lifetime:          { type: integer, required: false }
    hit_count:         { type: integer, required: true }
    created_at:
    updated_at:
    _uniques:
      hash:         [hash]
      
  open_privacy:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    profile_id:               { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    created_at:
    _uniques:
      member2profile:     [member_id, profile_id]

  homepage_member_photo:
    id:
    member_id:                { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    filepath:                 { type: varchar, size: 255 }
    gender:                   { type: char, size: 1, required: true, default: "M" }
    homepages:                { type: varchar, size: 255 } #will be used like array with comma separator (EN, PL, BG) ..
    homepages_set:            { type: tinyint } 
    homepages_pos:            { type: tinyint }
    updated_at:
        
  member_subscription:
    id:
    member_id:              { type: integer, required: true, foreignTable: member, foreignReference: id, onDelete: cascade }
    subscription_id:
    gift_by:                { type: integer, required: false }
    status:                 { type: varchar, size: 100, default: "pending" }
        #pending - on subscription creation, no payment and any confirmation yet
        #active - the member has confirmed the subscription e.g. made payment related to it
        #canceled - subscription has been canceled
        #eot
        #exprired - not cofirmed subscriptions should expire after 24 hours.
    last_status_change_at:  { type: timestamp }
    period:                 { type: tinyint, required: true }
    period_type:            { type: char, size: 1, required: true } #D, W, M, Y
    effective_date:         { type: timestamp }
    eot_at:                 { type: timestamp }
    pp_ref:                 { type: varchar, size: 255, requred: false } #payment processor reference ( PP subscription_id ID or similar )    
    details:                { type: longvarchar, required: false } #full details of the transaction
    created_at:
    updated_at:

  member_payment: #we use this as transaction ID
      id:
      member_id:                { type: integer, required: false, foreignTable: member, foreignReference: id, onDelete: cascade }
      payment_type:             { type: varchar, size: 20, required: true } #subscription, IMBRA
      member_subscription_id:   { type: integer, required: false, foreignTable: member_subscription, foreignReference: id, onDelete: cascade }
      payment_processor:        { type: varchar, size: 10 } #paypal, zong, bank ...
      amount:                   { type: decimal, size: 7, scale: 2, required: true }
      currency:                 { type: varchar, size: 5 } #ISO
      status:                   { type: varchar, size: 100, default: "pending" } #completed, pending (used with zong), expired ( pending payments needs to expire )
      extra_status:             { type: varchar, size: 100, required: false } #used for void payments ( reverses, refunds )
      pp_ref:                   { type: varchar, size: 255, requred: false } #payment processor reference ( payment ID or similar )
      details:                  { type: longvarchar, required: false } #full details of the transaction
      created_at:
      updated_at:

#below two tables are just for references, someday it shouldn't be need anymore, because i beleive all PP maintain it's database with history.
  ipn_history:
    id:
    parameters:         { type: longvarchar }
    request_ip:         { type: integer }
    txn_type:           { type: varchar, size: 255 }
    txn_id:             { type: varchar, size: 255 }
    subscr_id:          { type: varchar, size: 255 }
    payment_status:     { type: varchar, size: 255 }
    paypal_response:    { type: varchar, size: 8 }
    txn_created_at:     { type: timestamp }
    created_at:

  zong_history:
    id:
    transactionRef:     { type: varchar, size: 255, required: true }
    itemRef:            { type: varchar, size: 255, required: true }
    status:             { type: varchar, size: 10, required: true }
    failure:            { type: varchar, size: 20, required: false }
    method:             { type: varchar, size: 6, required: true }
    msisdn:             { type: varchar, size: 20, required: true } #http://en.wikipedia.org/wiki/E.164
    outPayment:         { type: varchar, size: 100, required: true }
    simulated:          { type: boolean, default: false }
    signature:          { type: longvarchar, required: true }
    signatureVersion:   { type: varchar, size: 2, required: true }
    request_ip:         { type: integer }
    verified:           { type: boolean, default: false }
    created_at:

    